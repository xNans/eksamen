// _config.scss

$light-color: white;
$primary-color: #103B9F;
$secondary-color: #FB329A;
$tertiary-color: #FFE84B;
$accent: #0C0C0C;
$error-color: #F78527;
$farve-orange:#F78527;
$farve-sort: black;


// How many columns and gap/gutter spacing in px
$grid-gutter     :  10px !default;
$grid-gutter-no  :  0px;
$grid-columns    :  12;
$full-width      :  100%;  // for full width design
$centered-width  :  80vw;  // for center based on pixel width
$width-type      :  $full-width;

// For-loop to make grid-columns with calc
@for $col-number from 1 through $grid-columns {
  .outer-col-#{$col-number} {
    $col-width: $col-number / $grid-columns;
    width: calc(100% * #{$col-width} - #{$grid-gutter} * (1 - #{$col-width}));
    background-color: #ccc;
    // Dont use padding and margin : use p-1 or mx-1 on HTML element
    display:flex;

  }
}

@for $col-number from 1 through $grid-columns {
  .inner-col-#{$col-number} {
    $col-width: $col-number / $grid-columns;
    width: calc(100% * #{$col-width} - 0px * (1 - #{$col-width}));
    background-color: #ccc;
    // Dont use padding and margin : use p-1 or mx-1 on HTML element
    display:flex;
  }
}

// For-loop to make grid-columns with calc - no gutter
@for $col-number from 1 through $grid-columns {
  .outer-col-no-#{$col-number} {
    $col-width: $col-number / $grid-columns;
    width: calc(100% * #{$col-width} - #{$grid-gutter-no} * (1 - #{$col-width}));
    background-color: #ccc;
    // Dont use padding and margin : use p-1 or mx-1 on HTML element
    display:flex;

  }
}

@for $col-number from 1 through $grid-columns {
  .inner-col-no-#{$col-number} {
    $col-width: $col-number / $grid-columns;
    width: calc(100% * #{$col-width} - 0px * (1 - #{$col-width}));
    background-color: #ccc;
    // Dont use padding and margin : use p-1 or mx-1 on HTML element
    display:flex;
  }
}

